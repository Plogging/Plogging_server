swagger: '2.0'
info:
  title: Plogging
  version: 1.0.0
  description: Plogging API docs

paths:
  /user/sign-in:
    post:
      summary: 로그인
      tags: [User]
      parameters:
        - in: body
          name: user
          description: userId는 email만 받는다.
          schema:
            type: object
            required:
              - userId
              - secretKey
            properties:
              
              userId:
                type: string
                example: ganghee@nate.com
              secretKey:
                type: string
                example: 1234qwer
      responses:
        200:
          description: 회원 로그인 성공
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
              userImg:
                type: string
                example: https://nexters.plogging.kro.kr:20000/profile/base/profile-1.PNG
              userName:
                type: string
                example: 쓰담이
        400:
          description: Bad Request (body should have required property [userId/ secretKey])
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: body should have required property [userId/ secretKey]
        401:
          description: 비밀번호 4회 오류 시 [한 번더 잘못 입력시 30분간 로그인이 제한됩니다.], 비밀번호 5회 오류 시 [로그인 오류 횟수를 초과했습니다. 잠시후 다시 로그인해주세요.]
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 가입되지 않은 정보이거나 비밀번호가 다릅니다.
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/social:
    post:
      summary: OAuth login
      tags: [User]
      parameters:
        - in: body
          name: user
          description: userId는 email:[type] 으로 구분자 ':'를 사용한다. type은 [kakao, naver, apple] 중 하나다. 409의 에러인 경우 userName 충돌이며 회원가입 실패이다.
          schema:
            type: object
            required:
              - userId
              - userName
            properties:
              userId:
                type: string
                example: ganghee@naver.com:naver
              userName:
                type: string
                example: 쓰담이
      responses:
        200:
          description: 기존 회원 로그인 성공
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
              userImg:
                type: string
                example: https://nexters.plogging.kro.kr:20000/profile/base/profile-1.PNG
              userName:
                type: string
                example: 쓰담이
        201:
          description: OAuth 신규 회원 등록 성공
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 201
              rcmsg:
                type: string
                example: 생성되었습니다.
              userImg:
                type: string
                example: https://nexters.plogging.kro.kr:20000/profile/base/profile-1.PNG
              userName:
                type: string
                example: 쓰담이
        400:
          description: Bad Request (body should have required property [userId/ userName])
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: body should have required property userId
        409:
          description: Conflict (user name conflict)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 409
              rcmsg:
                type: string
                example: 이미 사용중인 닉네임입니다.
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user:
    post:
      summary: 회원가입하기
      tags: [User]
      parameters:
        - in: body
          name: user
          description: userId는 단순히 email만 받는다.
          schema:
            type: object
            required:
              - userName
              - userId
              - secretKey
            properties:
              userId:
                type: string
                example: ganghee@naver.com
              userName:
                type: string
                example: 쓰담이
              secretKey:
                type: string
                example: 1234qwer
      responses:
        201:
          description: 회원가입 성공
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 201
              rcmsg:
                type: string
                example: 생성되었습니다.
              userImg:
                type: string
                example: https://nexters.plogging.kro.kr:20000/profile/base/profile-1.PNG
              userName:
                type: string
                example: 쓰담이
        400:
          description: Bad Request (body should have required property [userId])
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: Bad Request
        409:
          description: Conflict ('Username Conflict')
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 409
              rcmsg:
                type: string
                example: 이미 사용중인 닉네임입니다.
        410:
          description: Gone ('UserId Conflict')
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 410
              rcmsg:
                type: string
                example: 이미 사용중인 아이디입니다.
        
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
    delete:
      summary: 회원탈퇴
      tags: [User]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
        401:
          description: Unauthorized (sessionKey 유효하지 않을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 로그인 후 서비스를 이용해 주세요
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/check:
    post:
      summary: 사용자 아이디 가입 확인
      tags: [User]
      parameters:
        - in: body
          name: userId
          description: 회원 가입하기 전에 해당 id가 존재하는지 확인한다.
          schema:
            type: object
            required:
              - userId
            properties:
              userId:
                type: string
                example: ganghee@nate.com
      responses:
        200:
          description: OK (userId which is not existed)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: 아이디를 찾지 못했습니다.
        201:
          description: userId which is existed
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 201
              rcmsg:
                type: string
                example: 이미 사용중인 아이디입니다.
        400:
          description: Bad Request (body should have required property userId)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: body should have required property userId
        500:
          description: Internal Server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/{id}:
    get:
      summary: 사용자 정보 가져오기
      description: targetUserId의 사용자 닉네임, 프로필 사진, 플로깅 점수, 플로깅 거리, 쓰레기 주운 갯수를 가져온다.
      tags: [User]
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: 조회할 유저 id
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
              userId:
                type: string
                example: abc@naver.com:naver
              userImg:
                type: string
                example: https://nexters.plogging.kro.kr:20000/profile/base/profile-1.PNG
              userName:
                type: string
                example: 쓰담이
              scoreMonthly:
                type: string
                example: 1000
              distanceMonthly:
                type: string
                example: 12
              trashMonthly:
                type: string
                example: 99
              scoreWeekly:
                type: string
                example: 1000
              distanceWeekly:
                type: string
                example: 12
              trashWeekly:
                type: string
                example: 99
        401:
          description: Unauthorized (sessionKey 유효하지 않을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 로그인 후 서비스를 이용해 주세요
        404:
          description: Not Found (찾는 id가 없을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 404
              rcmsg:
                type: string
                example: 아이디를 찾지 못했습니다.
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/name:
    put:
      summary: 사용자 프로필 이름 변경
      description: 사용자의 이름을 변경합니다.
      tags: [User]
      produces:
        - application/json
      parameters:
        - in: body
          name: name
          description: 사용자 이름 받기
          schema:
            type: object
            required:
              - userName
            properties:
              userName:
                type: string
                example: 쓰담이
      responses:
        200:
          description: 사용자 이름 성공적으로 변경
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
              userName:
                type: string
                example: 쓰담이
        400:
          description: Bad Request (body should have required property name)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: body should have required property name
        401:
          description: Unauthorized (sessionKey 유효하지 않을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 로그인 후 서비스를 이용해 주세요
        409:
          description: userName Conflict
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 409
              rcmsg:
                type: string
                example: 이미 사용중인 닉네임입니다.
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/image:
    put:
      summary: 사용자 프로필 이미지 변경
      description: 사용자의 프로필 이미지를 변경합니다.
      tags: [User]
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: profileImg
          type: file
          required: true
          description: 사용자의 사진을 업로드 합니다.
      responses:
        200:
          description: 프로필 이미지 성공적으로 변경
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
              userImg:
                type: string
                example: https://nexters.plogging.kro.kr:20000/profile/base/profile-1.PNG
        401:
          description: Unauthorized (sessionKey 유효하지 않을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 로그인 후 서비스를 이용해 주세요
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/password:
    put:
      summary: 비밀번호 변경
      tags: [User]
      parameters:
        - in: body
          name: secretKey
          description: Password which was encrypted.
          schema:
            type: object
            required:
              - newSecretKey
              - existedSecretKey
            properties:
              newSecretKey:
                type: string
                description: Password which will be changed.
              existedSecretKey:
                type: string
                description: Password witch being.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
        400:
          description: Bad Request (body should have required property [newSecretKey/ existedSecretKey])
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: body should have required property [newSecretKey/ existedSecretKey]
        401:
          description: Unauthorized (sessionKey 유효하지 않을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 로그인 후 서비스를 이용해 주세요
        402:
          description: No userId or No secretKey from DB
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 402
              rcmsg:
                type: string
                example: 현재 비밀번호가 일치하지 않습니다.
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/password/confirm:
    put:
      summary: 임시 비밀번호 발급
      tags: [User]
      parameters:
        - in: body
          name: email
          description: 임시 비밀번호를 받는 이메일 주소
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                example: heeheewuwu@gmail.com
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
        400:
          description: Bad Request (body should have required property email)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: body should have required property email
        404:
          description: Not Found (no email)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 404
              rcmsg:
                type: string
                example: Not Found
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  /user/sign-out:
    put:
      summary: 사용자 로그아웃
      tags: [User]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: OK
        401:
          description: Unauthorized (sessionKey 유효하지 않을 때)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 로그인 후 서비스를 이용해 주세요.
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버에 오류가 발생했습니다. 잠시 후 다시 시도해주세요.
  
  /plogging/{targetUserId}:
    get:
      summary: 산책이력 가져오기
      tags: [Plogging]
      parameters:
        - in: path
          name: targetUserId
          type: string
          required: true
          description: 조회할 유저 id
        - in: query
          name: searchType
          type: number
          enum: [0, 1, 2]
          required: true
          description: 조회 type ( 최신순 / 점수순 / 모은 쓰레기 순)
        - in: query
          name: ploggingCntPerPage
          type: number
          required: false
          description: 한 페이지에 보여줄 산책이력 갯수 ( default - 4개 )
        - in: query
          name: pageNumber
          type: number
          required: false
          description: 조회할 페이지 숫자 ( default - 1 )
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: 산책이력 정보에 조회에 성공했습니다.
              plogging_list:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '5ff53c3ff9789143b86f863b'
                    meta:
                      type: object
                      properties:
                        user_id:
                          type: string
                          example: xowns4817@naver.com-naver
                        create_time:
                          type: string
                          format: date-time
                          example: 20210106132743
                        distance:
                          type: number
                          example: 1500
                        calories:
                          type: number
                          example: 200
                        plogging_time:
                          type: number
                          example: 20
                        plogging_img:
                          type: string
                          example: 'http://localhost:20000/plogging/xowns4817@naver.com-naver/plogging_20210106132743.PNG'
                        plogging_total_score:
                          type: number
                          example: 100000
                        plogging_activity_score:
                          type: number
                          example: 50000
                        plogging_environment_score:
                          type: number
                          example: 50000
                    trash_list:
                      type: array
                      items:
                        type: object
                        properties:
                          trash_type:
                            type: integer
                            example: 2
                          pick_count:
                            type: integer
                            example: 100
        400:
          description: Bad Request(parameter error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: 요청 파라미터를 확인해주세요.
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 권한이 없습니다.(로그인을 해주세요.)
        404:
          description: Bad Request(url error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 404
              rcmsg:
                type: string
                example: 요청 url을 확인해 주세요.
        500:
          description: server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버 오류.
  /plogging:
    post:
      summary: 산책 이력 등록하기
      tags: [Plogging]
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: ploggingImg
          type: file
          description: 산책 인증샷
          required: true
        - in: formData
          name: ploggingData
          type: string
          example: '{"meta": { "distance": 1500, "calorie": 200, "plogging_time": 20 }, "trash_list": [{ "trash_type": 2, "pick_count": 100 }, { "trash_type": 1, "pick_count": 200 }]}'
          required: true
          description: 산책이력 데이터
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: 산책이력 등록 성공
        400:
          description: Bad Request(parameter error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: 산책 데이터를 확인해주세요.
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 권한이 없습니다.(로그인을 해주세요.)
        404:
          description: Bad Request(url error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 404
              rcmsg:
                type: string
                example: 요청 url을 확인해 주세요.
        500:
          description: server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버 오류.
    delete:
      summary: 산책 이력 삭제하기
      tags: [Plogging]
      parameters:
        - in: query
          name: ploggingId
          type: string
          required: true
          example: "5ff53c3ff9789143b86f863b"
          description: 산책이력 식별키
        - in: query
          name: ploggingImgName
          type: string
          required: true
          example: plogging_20210106132743.PNG
          description: 산책 인증사진 파일이름
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: 산책이력 삭제 성공
        400:
          description: Bad Request(parameter error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: 파라미터를 확인해주세요.
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 권한이 없습니다.(로그인을 해주세요)
        404:
          description: Bad Request(url error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 404
              rcmsg:
                type: string
                example: 요청 url을 확인해 주세요.
        500:
          description: server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버 오류.
  /plogging/score:
    post:
      summary: 플로깅 점수 계산하기
      tags: [Plogging]
      parameters:
        - in: formData
          name: ploggingData
          type: string
          example: '{"meta": { "distance": 1500, "calorie": 200, "plogging_time": 20 }, "trash_list": [{ "trash_type": 2, "pick_count": 100 }, { "trash_type": 1, "pick_count": 200 }]}'
          required: true
          description: 산책이력 데이터
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: 플로깅 점수 계산 성공
              score:
                type: object
                properties:
                  totalScore:
                    type: number
                    example: 3200
                  activityScore:
                    type: number
                    example: 3000
                  environmentScore:
                    type: number
                    example: 200
        400:
          description: Bad Request(parameter error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: 산책 데이터를 확인해주세요.
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 401
              rcmsg:
                type: string
                example: 권한이 없습니다.(로그인을 해주세요)
        404:
          description: Bad Request(url error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 404
              rcmsg:
                type: string
                example: 요청 url을 확인해 주세요.
        500:
          description: server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버 오류.
  /rank/global:
    get:
      summary: 글로벌 랭킹 가져오기
      tags: [Ranking]
      parameters:
        - name: rankType
          in: query
          type: string
          enum: [weekly, monthly]
          required: true
          description: 랭킹 유형 (주간 / 월간)
        - name: rankCntPerPage
          in: query
          type: integer
          required: false
          description: 페이지당 랭킹 데이터 갯수
        - name: pageNumber
          in: query
          type: integer
          required: false
          description: 페이지 넘버
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: success
              meta:
                type: object
                properties:
                  startPageNumber:
                    type: number
                    example: 1
                  endPageNumber:
                    type: number
                    example: 99
                  currentPageNumber:
                    type: number
                    example: 1
              data:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    displayName:
                      type: string
                    profileImg:
                      type: string
                    score:
                      type: integer
                example:
                  - userId: happy@gamil.com:kakao
                    displayName: 해피
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 19480
                  - userId: choco@gamil.com:kakao
                    displayName: 초코
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 17000
                  - userId: bori@gamil.com:kakao
                    displayName: 보리
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 16500
                  - userid: ttori@gamil.com:kakao
                    displayName: 또리
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 16000
                  - userId: momo@gamil.com:kakao
                    displayName: 모모
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 15500
                  - userid: congi@gamil.com:kakao
                    displayName: 콩이
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 14500
                  - userId: coco@gamil.com:kakao
                    displayName: 코코
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 14000
                  - userId: hoya@gamil.com:kakao
                    displayName: 호야
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 13500
                  - userId: zzangu@gamil.com:kakao
                    displayName: 짱구
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 13000
                  - userId: duri@gamil.com:kakao
                    displayName: 두리
                    profileImg: 'https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg'
                    score: 12000
        400:
          description: Bad Request(parameter error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: query should have required property 'offset'
        500:
          description: server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버 오류.
  /rank/users/{id}:
    get:
      summary: 유저 랭킹 가져오기
      tags: [Ranking]
      parameters:
        - name: rankType
          in: query
          type: string
          enum: [weekly, monthly]
          required: true
          description: 랭킹 유형 (주간 / 월간)
        - name: id
          in: path
          type: string
          required: true
          description: 유저 ID
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 200
              rcmsg:
                type: string
                example: success
              data:
                type: object
                properties:
                  userId:
                    type: string
                    example: happy@gmail.com:kakao
                  displayName:
                    type: string
                    example: 해피
                  profileImg:
                    type: string
                    example: "https://i.pinimg.com/564x/d0/be/47/d0be4741e1679a119cb5f92e2bcdc27d.jpg"
                  rank:
                    type: integer
                    example: 0
                  score:
                    type: integer
                    example: 19480
        400:
          description: Bad Request(parameter error)
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 400
              rcmsg:
                type: string
                example: query should have required property 'rankType'
        500:
          description: server error
          schema:
            type: object
            properties:
              rc:
                type: number
                example: 500
              rcmsg:
                type: string
                example: 서버 오류.
